name: Release

on:
  push:
    branches:
      - master
      - usb-handling-in-python
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: ['3.10', '3.11']

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python-version}}

    - name: Install build tools
      run: python -m pip install --upgrade pip build

    - name: Build wheel and sdist
      run: python -m build --sdist --wheel --outdir dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vmk-spectrum-${{ matrix.python-version }}
        path: dist/*

  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: vmk-spectrum-${{ matrix.python-version }}
          path: artifacts/
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
      
      - name: Install artifact
        run: |
          python -m venv venv
          source venv/bin/activate || venv\Scripts\activate
          pip install artifacts/*.whl

      - name: Run tests
        run: |
          source venv/bin/activate || venv\Scripts\activate
          pytest tests/

#   upload-docs:
#     if: ${{github.ref == 'refs/heads/master'}}
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-python@v2.3.3
#         with:
#           python-version: '3.10'
# #      TODO: install requirements from [build-system]
#       - run: 'pip install mkdocs mkdocs-material mkdocstrings mkdocstrings-python mkdocs-jupyter'
#       - run: 'mkdocs build'
#       - name: Deploy to GitHub Pages
#         uses: JamesIves/github-pages-deploy-action@v4.4.1
#         with:
#           folder: docs_generated

  release:
    if: ${{ github.ref == 'refs/tags/latest' }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3.0.1
    - uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        automatic_release_tag: 'latest'
        title: 'Latest Build'
        files: |
          ${{github.workspace}}/*/*.whl
    - name: Copy whl files
      run: 'mkdir dist; cp $GITHUB_WORKSPACE/*/*.whl dist/'
    - name: Publish distribution to PyPI
#      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
#        packages-dir: ${{github.workspace}}/
