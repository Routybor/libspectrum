name: Release

on:
  push:
    branches:
      - master
      - usb-handling-in-python
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: '3.10'
            pep-425-tag: 'cp310-cp310'
          - python-version: '3.11'
            pep-425-tag: 'cp311-cp311'

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v2.3.3
      with:
        python-version: ${{matrix.python-version}}

    - run: python -m pip install cibuildwheel
    - run: cibuildwheel --output-dir dist
    
    - uses: kittaakos/upload-artifact-as-is@v0
      with:
        path: ${{github.workspace}}/vmk_spectrum-*.whl

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: '3.10'
            pep-425-tag: 'cp310-cp310'
          - python-version: '3.11'
            pep-425-tag: 'cp311-cp311'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v2.3.3
      with:
        python-version: ${{matrix.python-version}}

    - run: python -m pip install cibuildwheel
    - run: cibuildwheel --output-dir dist
    
    - uses: kittaakos/upload-artifact-as-is@v0
      with:
        path: ${{github.workspace}}/dist/vmk_spectrum-*-manylinux*.whl

#   upload-docs:
#     if: ${{github.ref == 'refs/heads/master'}}
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-python@v2.3.3
#         with:
#           python-version: '3.10'
# #      TODO: install requirements from [build-system]
#       - run: 'pip install mkdocs mkdocs-material mkdocstrings mkdocstrings-python mkdocs-jupyter'
#       - run: 'mkdocs build'
#       - name: Deploy to GitHub Pages
#         uses: JamesIves/github-pages-deploy-action@v4.4.1
#         with:
#           folder: docs_generated

  release:
    if: ${{ github.ref == 'refs/tags/latest' }}
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3.0.1
    - uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        automatic_release_tag: 'latest'
        title: 'Latest Build'
        files: |
          ${{github.workspace}}/*/*.whl
    - name: Copy whl files
      run: 'mkdir dist; cp $GITHUB_WORKSPACE/*/*.whl dist/'
    - name: Publish distribution to PyPI
#      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
#        packages-dir: ${{github.workspace}}/
